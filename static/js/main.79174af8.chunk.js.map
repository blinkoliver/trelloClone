{"version":3,"sources":["constants/urls.ts","utils.tsx","redux/auth-reducer.ts","assets/images/loading.svg","components/Preloader/Preloader.tsx","components/Login/LoginForm.tsx","components/Registration/RegistrationForm.tsx","components/Registration/RegistrationClasses.tsx","components/Registration/Registration.tsx","components/Login/LoginClasses.tsx","components/Login/Login.tsx","components/Home/HomeClasses.tsx","components/Home/Home.tsx","components/AddItemForm/AddItemFormClasses.tsx","components/AddItemForm/AddItemForm.tsx","components/Todolist/EditableSpan/EditableSpan.tsx","components/Todolist/Todolist.tsx","components/Dashboard/DashboardClasses.tsx","components/Dashboard/Dashboard.tsx","AppClasses.tsx","components/Copyright/Copiright.tsx","components/Menu/MenuClasses.tsx","components/Menu/Menu.tsx","App.tsx","reportWebVitals.ts","redux/todolists-reducer.ts","redux/store.ts","index.tsx","components/Todolist/todolist.module.css"],"names":["hosting","process","httpPost","path","params","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","awaitForJsonResponse","res","a","json","jsonRes","status","initialState","userInfo","statusCode","authUserAC","dispatch","authorization","data","catch","e","removeItem","setUserInfoAC","console","log","type","loaderContainerStyles","display","justifyContent","width","Preloader","style","src","loading","alt","LoginForm","history","useHistory","useDispatch","useState","fetchError","setFetchError","isFetching","setIsFetching","message","setMessage","useForm","handleSubmit","errors","control","classes","makeStyles","theme","form","marginTop","spacing","flexDirection","submit","margin","useStyles","onSubmit","updateData","email","password","post","setItem","token","push","finally","className","as","TextField","name","defaultValue","placeholder","rules","required","pattern","Typography","variant","minLength","value","FormControlLabel","Checkbox","color","label","Button","fullWidth","RegistrationForm","username","reason","paper","paddingTop","alignItems","avatar","backgroundColor","palette","secondary","main","link","textDecoration","padding","Registration","registrationClasses","useSelector","state","Container","maxWidth","CssBaseline","Avatar","component","to","Login","root","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","loginClasses","Grid","container","item","xs","sm","md","Paper","elevation","square","flexGrow","filter","title","typography","textAlign","textShadow","Home","homeClasses","textField","borderRadius","AddItemForm","props","addItem","newTaskTitle","setNewTaskTitle","error","setError","addItemFormClasses","multiline","rowsMax","onChange","trim","currentTarget","onKeyPress","key","helperText","IconButton","onClick","ControlPoint","EditableSpan","editMode","setEditMode","setTitle","onBlur","autoFocus","onDoubleClick","Todolist","todo_id","tasks","changeTodolist","removeTodolist","tasksArr","parse","renderTasks","element","isDone","changeFilter","newFilter","changeTitle","newTitle","aria-label","Delete","fontSize","newTask","createdTask","task_id","v1","map","t","s","checked","updatedTasks","changeDoneStatus","tasksWitoutDeleted","removeTask","green","dashboard","addForm","cards","Dashboard","todolists","setTodolists","dashboardClasses","updatedProps","changedElement","el","Object","keys","values","toString","arr1","arr2","obj","find","p","useEffect","tl","height","header","minHeight","footer","primary","backdrop","zIndex","drawer","menuButton","marginRight","toolbar","footerContainer","alignSelf","Copyright","align","Link","href","Date","getFullYear","menu","position","minWidth","top","backdropFilter","boxShadow","Menu","handleClose","menuClasses","App","appClasses","React","open","setOpen","matches","useMediaQuery","AppBar","Toolbar","edge","Backdrop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","todolist","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.79174af8.chunk.js","sourcesContent":["export const loginPath = `auth/`;\nexport const getCardsPath = `cards/`;\nexport const hosting =\n  process.env.NODE_ENV === \"development\"\n    ? process.env.REACT_APP_API_LOCAL_URL\n    : process.env.REACT_APP_API_URL;\n","import { hosting } from \"../src/constants/urls\";\n\nexport const httpGet = (path: string) => {\n  return fetch(`${hosting}${path}`, {\n    method: \"GET\",\n    //@ts-ignore\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  })\n    .then(awaitForJsonResponse)\n};\n\nexport const httpPost = (path: string, params: any) => {\n  return fetch(`${hosting}${path}`, {\n    method: \"POST\",\n    //@ts-ignore\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify(params),\n  })\n    .then(awaitForJsonResponse)\n};\n\nexport const httpPut = (path: string, params: any) => {\n  return fetch(`${hosting}${path}`, {\n    method: \"PUT\",\n    //@ts-ignore\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify(params),\n  })\n    .then(awaitForJsonResponse)\n};\n\nexport const httpDelete = (path: string) => {\n  return fetch(`${hosting}${path}`, {\n    method: \"DELETE\",\n    //@ts-ignore\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  })\n    .then(awaitForJsonResponse)\n};\n\nexport const httpAuthorized = (path: string) => {\n  return fetch(`${hosting}${path}`, {\n    method: \"GET\",\n    //@ts-ignore\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: localStorage.getItem(\"token\"),\n    },\n  })\n    .then(awaitForJsonResponse)\n    .then((data) => {\n      return data;\n    })\n    .catch((e) => {\n      localStorage.removeItem(\"token\");\n      return e;\n    });\n};\n\nconst awaitForJsonResponse = async (res: any) => {\n  const jsonRes = await res.json();\n  if (res.status >= 400) {\n    throw jsonRes;\n  } else {\n    return jsonRes;\n  }\n};\n\nexport const mergeArrays = (arr1: Array<any>, arr2: Array<any>) =>\n  arr1 &&\n  arr1.map(\n    (obj) => (arr2 && arr2.find((p) => p.todo_id === obj.todo_id)) || obj\n  );\n","// @ts-nocheck\nimport { httpAuthorized } from \"../utils\";\nexport type AuthUserActionType = {\n  type: \"SET-USER-INFO\";\n  user_id: string;\n};\n\nexport type LogoutUserActionType = {\n  type: \"LOGOUT-USER\";\n  user_id: string;\n};\n\nexport type UserInfoType = {\n  user_id: string;\n  email: string;\n  username: string;\n  statusCode: number;\n};\n\ntype ActionsType = AuthUserActionType | LogoutUserActionType;\n\nconst initialState = {\n  userInfo: { statusCode: 401 },\n};\nexport const authReducer = (\n  state = initialState,\n  action: ActionsType\n): Array<UserInfoType> => {\n  switch (action.type) {\n    case \"SET-USER-INFO\": {\n      return { ...state, userInfo: action.userInfo };\n    }\n    case \"LOGOUT-USER\": {\n      return { ...state, userInfo: action.userInfo };\n    }\n  }\n  return state;\n};\n\nexport const authUserAC = () => {\n  return (dispatch) => {\n    httpAuthorized(\"/auth\")\n      .then((userInfo) => {\n        dispatch(setUserInfoAC(userInfo));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n};\nexport const setUserInfoAC = (userInfo: UserInfoType): AuthUserActionType => {\n  return {\n    type: \"SET-USER-INFO\",\n    userInfo,\n  };\n};\nexport const logoutUserAC = (): LogoutUserActionType => {\n  return {\n    type: \"LOGOUT-USER\",\n    userInfo: { statusCode: 401 },\n  };\n};\n","export default __webpack_public_path__ + \"static/media/loading.8692bab9.svg\";","// @ts-nocheck\nimport loading from \"../../assets/images/loading.svg\";\n\nconst loaderContainerStyles = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  width: \"100%\",\n};\n\nconst Preloader = () => {\n  return (\n    <div style={loaderContainerStyles}>\n      <img src={loading} alt=\"logo\" />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import { useState } from \"react\";\nimport { useForm, SubmitHandler, Controller } from \"react-hook-form\";\nimport { httpPost } from \"../../utils\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserInfoAC } from \"../../redux/auth-reducer\";\nimport { useHistory } from \"react-router-dom\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Preloader from \"../Preloader/Preloader\";\n\ntype FormValues = {\n  email: string;\n  password: string;\n};\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [fetchError, setFetchError] = useState<boolean>(false);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n  const [message, setMessage] = useState(\"\");\n  const { handleSubmit, errors, control } = useForm<FormValues>();\n\n  const useStyles = makeStyles((theme) => ({\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n  const classes = useStyles();\n\n  const onSubmit: SubmitHandler<FormValues> = async (data) => {\n    const updateData: FormValues = {\n      email: data.email,\n      password: data.password,\n    };\n    setIsFetching(true);\n    httpPost(`/auth/login`, updateData)\n      .then((post) => {\n        dispatch(setUserInfoAC(post));\n        if (post.statusCode === 200) {\n          localStorage.setItem(\"token\", post.token);\n          history.push(\"/dashboard\");\n          setFetchError(false);\n        } else {\n          setMessage(\"Invlid email or password\");\n          setFetchError(true);\n        }\n      })\n      .catch(() => setFetchError(true))\n      //@ts-ignore\n      .finally(() => setIsFetching(false));\n  };\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={TextField}\n        type=\"email\"\n        name=\"email\"\n        control={control}\n        defaultValue=\"\"\n        placeholder=\"Email\"\n        rules={{ required: true, pattern: /^\\S+@\\S+$/i }}\n      />\n      {errors.email && errors.email.type === \"required\" && (\n        <Typography variant=\"h6\">Required field</Typography>\n      )}\n      {errors.email && errors.email.type === \"pattern\" && (\n        <Typography variant=\"h6\">Invalid email</Typography>\n      )}\n      <Controller\n        as={TextField}\n        type=\"password\"\n        name=\"password\"\n        control={control}\n        defaultValue=\"\"\n        placeholder=\"Password\"\n        rules={{\n          minLength: {\n            value: 3,\n            message: \"password must been more then 3 char\",\n          },\n          required: \"error message\",\n        }}\n      />\n      {errors.password && errors.password.type === \"required\" && (\n        <Typography variant=\"h6\">Required field</Typography>\n      )}\n      {errors.password?.type === \"minLength\" && \"Your input exceed minLength\"}\n      <Typography variant=\"h6\">{message}</Typography>\n      <FormControlLabel\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\n        label=\"Remember me\"\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        Login\n      </Button>\n      {isFetching ? <Preloader /> : <></>}\n      {fetchError ? (\n        <Typography variant=\"h6\">Invalid email or password</Typography>\n      ) : (\n        <></>\n      )}\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { useForm, SubmitHandler, Controller } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { httpPost } from \"../../utils\";\nimport { setUserInfoAC } from \"../../redux/auth-reducer\";\nimport Preloader from \"../Preloader/Preloader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\ntype FormValues = {\n  username: string;\n  email: string;\n  password: string;\n};\n\nconst RegistrationForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [fetchError, setFetchError] = useState(false);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n  const [message, setMessage] = useState(\"\");\n  const { handleSubmit, errors, control } = useForm<FormValues>();\n\n  const useStyles = makeStyles((theme) => ({\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n  const classes = useStyles();\n\n  const onSubmit: SubmitHandler<FormValues> = async (data) => {\n    const updateData: FormValues = {\n      username: data.username,\n      email: data.email,\n      password: data.password,\n    };\n    setIsFetching(true);\n    httpPost(`/auth/registration`, updateData)\n      .then((post) => {\n        dispatch(setUserInfoAC(post));\n        if (post.statusCode === 200) {\n          localStorage.setItem(\"token\", post.token);\n          history.push(\"/dashboard\");\n          setFetchError(false);\n        } else {\n          setMessage(post.reason);\n          setFetchError(true);\n        }\n        console.log(post);\n      })\n      .catch(() => setFetchError(true))\n      .finally(() => setIsFetching(false));\n  };\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={TextField}\n        type=\"text\"\n        name=\"username\"\n        control={control}\n        defaultValue=\"\"\n        placeholder=\"Username\"\n        rules={{ required: true }}\n      />\n      {errors.username && errors.username.type === \"required\" && (\n        <Typography variant=\"h6\">Required field</Typography>\n      )}\n      <Controller\n        as={TextField}\n        type=\"email\"\n        name=\"email\"\n        control={control}\n        defaultValue=\"\"\n        placeholder=\"Email\"\n        rules={{ required: true, pattern: /^\\S+@\\S+$/i }}\n      />\n      {errors.email && errors.email.type === \"required\" && (\n        <Typography variant=\"h6\">required</Typography>\n      )}\n      {errors.email && errors.email.type === \"pattern\" && (\n        <Typography variant=\"h6\">Incorect email</Typography>\n      )}\n      <Controller\n        as={TextField}\n        type=\"password\"\n        name=\"password\"\n        control={control}\n        defaultValue=\"\"\n        placeholder=\"Password\"\n        rules={{\n          minLength: {\n            value: 3,\n            message: \"password must been more then 3 char\",\n          },\n          required: \"error message\",\n        }}\n      />\n      {errors.password && errors.password.type === \"required\" && (\n        <Typography variant=\"h6\">Required field</Typography>\n      )}\n      {errors.password?.type === \"minLength\" && \"Your input exceed minLength\"}\n      <Typography variant=\"h6\">{message}</Typography>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        Registration\n      </Button>\n      {isFetching ? <Preloader /> : <></>}\n      {fetchError ? <Typography variant=\"h6\">Name busy</Typography> : <></>}\n    </form>\n  );\n};\n\nexport default RegistrationForm;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    paddingTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  link: {\n    textDecoration: \"underline\",\n    padding: 0,\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport RegistrationForm from \"./RegistrationForm\";\nimport { NavLink, Route, useHistory } from \"react-router-dom\";\nimport Login from \"../Login/Login\";\nimport { useSelector } from \"react-redux\";\nimport { DashboardRootState } from \"../../redux/store\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport useStyles from \"./RegistrationClasses\";\n\nconst Registration = () => {\n  const history = useHistory();\n  const registrationClasses = useStyles();\n  const userInfo = useSelector<DashboardRootState, any>(\n    (state) => state.userInfo\n  );\n  if (userInfo.statusCode === 200) {\n    history.push(\"/dashboard\");\n  }\n  \n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={registrationClasses.paper}>\n        <Avatar className={registrationClasses.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Аlready registered?{\" \"}\n          <NavLink className={registrationClasses.link} to={\"/login\"}>\n            Login\n          </NavLink>\n        </Typography>\n        <RegistrationForm />\n      </div>\n      <Route color=\"inherit\" path={\"/login\"} component={Login} />\n    </Container>\n  );\n};\n\nexport default Registration;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"none\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  link: {\n    textDecoration: \"underline\",\n    padding: 0,\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { NavLink, Route, useHistory } from \"react-router-dom\";\nimport Registration from \"../Registration/Registration\";\nimport { useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { DashboardRootState } from \"../../redux/store\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useStyles from \"./LoginClasses\";\n\nconst Login = () => {\n  const history = useHistory();\n  const loginClasses = useStyles();\n  const userInfo = useSelector<DashboardRootState, any>(\n    (state) => state.userInfo\n  );\n  if (userInfo.statusCode === 200) {\n    history.push(\"/dashboard\");\n  }\n\n  return (\n    <Grid container className={loginClasses.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={loginClasses.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={loginClasses.paper}>\n          <Avatar className={loginClasses.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h2\" variant=\"h5\">\n            Don't have an account?{\" \"}\n            <NavLink className={loginClasses.link} to={\"/registration\"}>\n              Registration\n            </NavLink>\n          </Typography>\n          <LoginForm />\n        </div>\n      </Grid>\n      <Route color=\"inherit\" path={\"/registration\"} component={Registration} />\n    </Grid>\n  );\n};\n\nexport default Login;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexGrow: 1,\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    filter: \"grayscale(100%) saturate(30%)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  title: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  typography: {\n    textAlign: \"center\",\n    textShadow: \"3px 4px 2px rgba(147, 147, 147, 1)\",\n    color: \"white\",\n  },\n}));\nexport default useStyles;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./HomeClasses\";\n\nconst Home = () => {\n  const homeClasses = useStyles();\n\n  return (\n    <Grid container className={homeClasses.root}>\n      <Grid item xs={12} sm={12} md={12} className={homeClasses.image}>\n        <div className={homeClasses.title}>\n          <Typography component=\"h1\" variant=\"h3\" className = {homeClasses.typography}>\n            RSCloneTrello: organize anything!\n          </Typography>\n          <Typography component=\"h4\" variant=\"h6\" className = {homeClasses.typography}>\n            Infinitely flexible. Incredibly easy to use. It's free.\n            RSCloneTrello keeps track of everything, from the big picture to the\n            minute details.\n          </Typography>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Home;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    backgroundColor: \"lightgrey\",\n    borderRadius: \"5px\",\n    },\n}));\nexport default useStyles;\n","import { IconButton, TextField } from \"@material-ui/core\";\nimport React, { ChangeEvent, KeyboardEvent, useState } from \"react\";\nimport { ControlPoint } from \"@material-ui/icons\";\nimport useStyles from \"./AddItemFormClasses\";\n\ntype AddItemFormPropsTYpe = {\n  addItem: (title: string) => void;\n};\n\nexport const AddItemForm: React.FC<AddItemFormPropsTYpe> = (props) => {\n  const { addItem } = props;\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const addItemFormClasses = useStyles();\n  const onNewTitleChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    if (newTaskTitle.trim() === \"\") {\n    }\n    setNewTaskTitle(e.currentTarget.value);\n    setError(null);\n  };\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n    const { key } = e;\n    if (key === \"Enter\") {\n      addItem(newTaskTitle);\n      setNewTaskTitle(\"\");\n    }\n  };\n  const addTaskHandler = () => {\n    if (newTaskTitle.trim() === \"\") {\n      setError(\"Title is required\");\n      return;\n    }\n    addItem(newTaskTitle.trim());\n    setNewTaskTitle(\"\");\n  };\n  return (\n    <div>\n      <TextField\n        className={addItemFormClasses.textField}\n        variant={\"outlined\"}\n        label=\"Type Value\"\n        multiline\n        rowsMax={4}\n        value={newTaskTitle}\n        onChange={onNewTitleChangeHandler}\n        onKeyPress={onKeyPressHandler}\n        error={!!error}\n        helperText={error}\n      />\n      <IconButton onClick={addTaskHandler}>\n        <ControlPoint color=\"primary\" />\n      </IconButton>\n    </div>\n  );\n};\n","import React, {ChangeEvent, useState} from \"react\";\nimport {TextField} from \"@material-ui/core\";\n\ntype EditableSpanPropsType = {\n  title: string\n  onChange: (newValue: string) => void\n}\n\nexport const EditableSpan: React.FC<EditableSpanPropsType> = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [title, setTitle] = useState('');\n  const activateEditMode = () => {\n    setEditMode(true);\n    setTitle(props.title)\n  };\n  const activateViewMod = () => {\n    setEditMode(false);\n    props.onChange(title);\n  };\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => setTitle(e.currentTarget.value)\n\n  return (\n    editMode\n      ? <TextField\n        onBlur={activateViewMod}\n        onChange={onChangeHandler}\n        value={title} autoFocus\n      />\n      : <span onDoubleClick={activateEditMode}>{props.title}</span>\n  )\n}","// @ts-nocheck\nimport React from \"react\";\nimport s from \"./todolist.module.css\";\nimport { FilterValuesType } from \"../Dashboard/Dashboard\";\nimport { AddItemForm } from \"../AddItemForm/AddItemForm\";\nimport { EditableSpan } from \"./EditableSpan/EditableSpan\";\nimport { Button, Checkbox, IconButton } from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { green } from \"@material-ui/core/colors\";\nimport { v1 } from \"uuid\";\n\nexport type TasksType = {\n  task_id: string;\n  title: string;\n  isDone: boolean;\n};\nexport type TodolistPropsType = {\n  todo_id: string;\n  title: string;\n  tasks: any;\n  filter: FilterValuesType;\n  removeTodolist: (todo_id: string) => void;\n  changeTodolist: (todo_id: string, newTitle: string) => void;\n};\n\nconst Todolist: React.FC<TodolistPropsType> = (props) => {\n  const {\n    todo_id,\n    title,\n    filter,\n    tasks,\n    changeTodolist,\n    removeTodolist,\n  } = props;\n  let tasksArr: Array<TasksType> = JSON.parse(tasks);\n  let renderTasks = [];\n  switch (filter) {\n    case \"active\":\n      renderTasks = tasksArr.filter((element) => element.isDone === false);\n      break;\n    case \"completed\":\n      renderTasks = tasksArr.filter((element) => element.isDone === true);\n      break;\n    default:\n      renderTasks = tasksArr;\n      break;\n  }\n\n  const addNewTask = (newTask: string) => {\n    const createdTask = [\n      ...tasksArr,\n      { title: newTask, task_id: v1(), isDone: false },\n    ];\n    // @ts-ignore\n    changeTodolist(todo_id, { tasks: JSON.stringify(createdTask) });\n  };\n\n  const removeTask = (task_id: string) => {\n    const tasksWitoutDeleted = tasksArr.filter(\n      (element) => element.task_id !== task_id\n    );\n    // @ts-ignore\n    changeTodolist(todo_id, { tasks: JSON.stringify(tasksWitoutDeleted) });\n  };\n\n  const changeDoneStatus = (task_id: string, status: boolean) => {\n    const updatedTasks = tasksArr.map((element) => {\n      if (element.task_id === task_id) {\n        element.isDone = status;\n        return element;\n      } else {\n        return element;\n      }\n    });\n    // @ts-ignore\n    changeTodolist(todo_id, { tasks: JSON.stringify(updatedTasks) });\n  };\n\n  const changeFilter = (newFilter: string) => {\n    // @ts-ignore\n    changeTodolist(todo_id, { filter: newFilter });\n  };\n\n  const changeTitle = (newTitle: any) => {\n    changeTodolist(todo_id, newTitle);\n  };\n  return (\n    <div>\n      <h3>\n        <EditableSpan title={title} onChange={changeTitle} />\n        <IconButton aria-label=\"delete\" onClick={() => removeTodolist(todo_id)}>\n          <Delete fontSize=\"small\" />\n        </IconButton>\n      </h3>\n      <AddItemForm addItem={addNewTask} />\n      <div>\n        {renderTasks.map((t) => {\n          return (\n            <div key={t.task_id} className={t.isDone ? `${s.isDone}` : \"\"}>\n              <Checkbox\n                color=\"secondary\"\n                checked={t.isDone}\n                onClick={() => changeDoneStatus(t.task_id, !t.isDone)}\n              />\n              <EditableSpan title={t.title} onChange={changeTitle} />\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => removeTask(t.task_id)}\n              >\n                <Delete fontSize=\"small\" style={{ color: green[500] }} />\n              </IconButton>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <Button\n          variant={filter === \"all\" ? `contained` : \"text\"}\n          onClick={() => changeFilter(\"all\")}\n        >\n          All\n        </Button>\n        <Button\n          color={\"primary\"}\n          variant={filter === \"active\" ? `contained` : \"text\"}\n          onClick={() => changeFilter(\"active\")}\n        >\n          Active\n        </Button>\n        <Button\n          color={\"secondary\"}\n          variant={filter === \"completed\" ? `contained` : \"text\"}\n          onClick={() => changeFilter(\"completed\")}\n        >\n          Completed\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default Todolist\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  dashboard: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    width: \"100%\",\n  },\n  addForm: {\n    padding: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  cards: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    margin: 0,\n  },\n  typography: {\n    textAlign: \"center\",\n    paddingTop: \"5vh\",\n    textShadow: \"3px 4px 2px rgba(147, 147, 147, 1)\",\n    color: \"white\",\n  },\n}));\nexport default useStyles;\n","// @ts-nocheck\nimport React, { useState, useEffect } from \"react\";\nimport { TasksType } from \"../Todolist/Todolist\";\nimport Todolist from \"../Todolist/Todolist\";\nimport { AddItemForm } from \"../AddItemForm/AddItemForm\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logoutUserAC } from \"../../redux/auth-reducer\";\nimport Preloader from \"../Preloader/Preloader\";\nimport useStyles from \"./DashboardClasses\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { DashboardRootState } from \"../../redux/store\";\nimport { UserInfoStateType } from \"../../App\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  httpGet,\n  httpPost,\n  httpPut,\n  httpDelete,\n  mergeArrays,\n} from \"../../utils\";\n\nexport type FilterValuesType = \"all\" | \"completed\" | \"active\";\nexport type TodolistsType = {\n  todo_id: string;\n  title: string;\n  isDone: boolean;\n  tasks: any;\n  filter: FilterValuesType;\n};\nexport type TasksStateType = {\n  [key: string]: Array<TasksType>;\n};\n\nconst Dashboard = () => {\n  const [todolists, setTodolists] = useState<Array<TodolistsType>>([]);\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const userInfo = useSelector<DashboardRootState, UserInfoStateType>(\n    (state) => state.userInfo\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const dashboardClasses = useStyles();\n\n  const addTodolist = (title: string) => {\n    setIsFetching(true);\n    httpPost(`/todos`, { title: title })\n      .then((post) => {\n        //@ts-ignore\n        setTodolists([...todolists, post]);\n      })\n      .catch((error) => {\n        //@ts-ignore\n        if (error.statusCode === 403) {\n          setMessage(\"Login or Registrate for use dashboard\");\n          dispatch(logoutUserAC());\n        } else {\n          setMessage(\"Server error, please try later\");\n        }\n      })\n      //@ts-ignore\n      .finally(() => setIsFetching(false));\n  };\n  const changeTodolist = (todo_id: string, updatedProps: any) => {\n    const changedElement = todolists.filter((el) => el.todo_id === todo_id);\n    //@ts-ignore\n    changedElement[0][`${Object.keys(updatedProps)}`] = Object.values(\n      updatedProps\n    ).toString();\n    setIsFetching(true);\n    httpPut(`/todos/${todo_id}`, updatedProps)\n      .then(() => {\n        setTodolists(mergeArrays(todolists, changedElement));\n      })\n      .catch((error) => {\n        //@ts-ignore\n        if (error.statusCode === 403) {\n          setMessage(\"Login or Registrate for use dashboard\");\n          dispatch(logoutUserAC());\n        } else {\n          setMessage(\"Server error, please try later\");\n        }\n      })\n      //@ts-ignore\n      .finally(() => setIsFetching(false));\n  };\n  const removeTodolist = (todo_id: string) => {\n    setIsFetching(true);\n    httpDelete(`/todos/${todo_id}`)\n      .then(() => {\n        setTodolists(todolists.filter((el) => el.todo_id !== todo_id));\n      })\n      .catch((error) => {\n        //@ts-ignore\n        if (error.statusCode === 403) {\n          setMessage(\"Login or Registrate for use dashboard\");\n          dispatch(logoutUserAC());\n        } else {\n          setMessage(\"Server error, please try later\");\n        }\n      })\n      //@ts-ignore\n      .finally(setIsFetching(false));\n  };\n  useEffect(() => {\n    setIsFetching(true);\n    httpGet(\"/todos\")\n      .then((post) => {\n        setTodolists(post);\n      })\n      .catch((error) => {\n        if (error.statusCode === 403) {\n          setMessage(\"Login or Registrate for use dashboard\");\n          dispatch(logoutUserAC());\n        } else {\n          setMessage(\"Server error, please try later\");\n        }\n      })\n      .finally(() => setIsFetching(false));\n  }, [history, dispatch]);\n\n  return isFetching ? (\n    <Preloader />\n  ) : (\n    <div className={dashboardClasses.dashboard}>\n      {userInfo.userInfo.statusCode === 200 ? (\n        <Grid className={dashboardClasses.addForm} container>\n          <AddItemForm addItem={addTodolist} />\n        </Grid>\n      ) : (\n        <Typography\n          className={dashboardClasses.typography}\n          component=\"h2\"\n          variant=\"h3\"\n        >\n          {message}\n        </Typography>\n      )}\n      <Grid className={dashboardClasses.cards} container spacing={3}>\n        {todolists.map((tl) => {\n          return (\n            <Grid key={tl.todo_id} item>\n              <Paper key={tl.todo_id} style={{ padding: \"10px\" }}>\n                <Todolist\n                  key={tl.todo_id}\n                  todo_id={tl.todo_id}\n                  title={tl.title}\n                  filter={tl.filter}\n                  tasks={tl.tasks}\n                  removeTodolist={removeTodolist}\n                  changeTodolist={changeTodolist}\n                />\n              </Paper>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\nexport default Dashboard;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n  },\n  header: {\n    height: \"10%\",\n  },\n  main: {\n    padding: 0,\n    margin: 0,\n    maxWidth: \"2048px\",\n    minHeight: \"79%\",\n    display: \"flex\",\n    flexGrow: 1,\n  },\n  footer: {\n    padding: 0,\n    height: \"11%\",\n    backgroundColor: theme.palette.primary.main,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  footerContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  link: {\n    alignSelf: \"center\",\n    textDecoration: \"none\",\n  },\n}));\nexport default useStyles;\n","import Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://rs.school/js\">\n        rsSchool\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingTop: \"15%\",\n    position: \"absolute\",\n    height: \"100vh\",\n    width: \"60vw\",\n    maxWidth: \"300px\",\n    minWidth: \"300px\",\n    top: 0,\n    backgroundColor: \"rgba(255, 255, 255, 0.6)\",\n    color: \"#333\",\n    zIndex: 1201,\n    backdropFilter: \"blur(3px)\",\n    boxShadow: \"2px 2px 10px 1px rgba(0, 0, 0, 0.75)\",\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport useStyles from \"./MenuClasses\";\nimport { NavLink } from \"react-router-dom\";\nimport { Typography, Container } from \"@material-ui/core\";\n\ntype MenuPropsType = {\n  handleClose: () => void;\n};\n\nconst Menu: React.FC<MenuPropsType> = (props) => {\n  const { handleClose } = props;\n    const menuClasses = useStyles();\n    \n  return (\n    <Container className={menuClasses.menu}>\n      <NavLink to={\"/home\"} className={menuClasses.link} onClick={handleClose}>\n        <Typography variant=\"h6\">rsCloneTrello</Typography>\n      </NavLink>\n      <NavLink\n        className={menuClasses.link}\n        to={\"/dashboard\"}\n        onClick={handleClose}\n      >\n        Dashboard\n      </NavLink>\n    </Container>\n  );\n};\nexport default Menu;\n","// @ts-nocheck\nimport React, { useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Registration from \"./components/Registration/Registration\";\nimport Home from \"./components/Home/Home\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport { NavLink, Route, useHistory } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authUserAC, logoutUserAC, UserInfoType } from \"./redux/auth-reducer\";\nimport { DashboardRootState } from \"./redux/store\";\nimport useStyles from \"./AppClasses\";\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Container,\n  Backdrop,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport Copyright from \"./components/Copyright/Copiright\";\nimport Menu from \"./components/Menu/Menu\";\n\nimport \"./App.css\";\n\nexport type UserInfoStateType = {\n  [key: string]: Array<UserInfoType>;\n};\n\nconst App = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const appClasses = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const matches = useMediaQuery(\"(min-width:600px)\");\n  const userInfo = useSelector<DashboardRootState, UserInfoStateType>(\n    (state) => state.userInfo\n  );\n\n  const logout = () => {\n    dispatch(logoutUserAC());\n    localStorage.removeItem(\"token\");\n    history.push(\"/home\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  useEffect(() => {\n    dispatch(authUserAC());\n    if (userInfo.statusCode === 200) {\n      history.push(\"/home\");\n    }\n  }, [dispatch, history, userInfo.statusCode]);\n\n  return (\n    <div className={appClasses.root}>\n      <AppBar className={appClasses.header} position=\"static\">\n        <Toolbar className={appClasses.toolbar}>\n          <div className=\"left-menu\">\n            {!matches ? (\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                className={appClasses.menuButton}\n                onClick={handleToggle}\n              >\n                <MenuIcon />\n              </IconButton>\n            ) : (\n              <></>\n            )}\n            {matches ? (\n              <>\n                <NavLink to={\"/home\"} className={appClasses.link}>\n                  <Typography variant=\"h6\">rsCloneTrello</Typography>\n                </NavLink>\n                <NavLink className={appClasses.link} to={\"/dashboard\"}>\n                  Dashboard\n                </NavLink>\n              </>\n            ) : (\n              <></>\n            )}\n          </div>\n          <div className=\"right-menu\">\n            {userInfo.userInfo.statusCode !== 200 ? (\n              <NavLink to={\"/login\"}>Login</NavLink>\n            ) : (\n              userInfo.userInfo.username\n            )}\n            {userInfo.userInfo.statusCode !== 200 ? (\n              <NavLink to={\"/registration\"}>Registration</NavLink>\n            ) : (\n              <NavLink to={\"/home\"} onClick={() => logout()}>\n                Logout\n              </NavLink>\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Container className={appClasses.main} component=\"main\">\n        <Route color=\"inherit\" path={\"/login\"} component={Login} />\n        <Route color=\"inherit\" path={\"/dashboard\"} component={Dashboard} />\n        <Route color=\"inherit\" path={\"/home\"} component={Home} />\n        <Route\n          color=\"inherit\"\n          path={\"/registration\"}\n          component={Registration}\n        />\n      </Container>\n      <footer className={appClasses.footer}>\n        <Container className={appClasses.footerContainer} maxWidth=\"sm\">\n          {matches ? (\n            <a href=\"https://rs.school/js/\">\n              <img\n                className=\"footer__logo-img\"\n                src=\"https://rs.school/images/rs_school_js.svg\"\n                alt=\"Rolling Scopes\"\n              />\n            </a>\n          ) : (\n            <></>\n          )}\n          <Copyright></Copyright>\n          <div className=\"footer__authors\">\n            <p>Created by:</p>\n            <ul className=\"footer__authors-list\">\n              <li className=\"footer__authors-link\">\n                <a href=\"https://github.com/blinkoliver\">blinkoliver</a>\n              </li>\n              <li className=\"footer__authors-link\">\n                <a href=\"https://github.com/maximLomako\">maximlomako</a>\n              </li>\n              <li className=\"footer__authors-link\">\n                <a href=\"https://github.com/antipea\">antipea</a>\n              </li>\n            </ul>\n          </div>\n        </Container>\n      </footer>\n      <Backdrop\n        className={appClasses.backdrop}\n        open={open}\n        onClick={handleClose}\n      />\n      {open ? (\n        <Menu handleClose={handleClose}></Menu>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TodolistsType } from \"../components/Dashboard/Dashboard\";\nimport { v1 } from \"uuid\";\n\ntype RemoveTodolistActionType = {\n  type: \"REMOVE-TODOLIST\";\n  todo_id: string;\n};\ntype AddTodolistActionType = {\n  type: \"ADD-TODOLIST\";\n  title: string;\n  todo_id: string;\n};\ntype ChangeTodolistActionType = {\n  type: \"CHANGE-TODOLIST\";\n  todo_id: string;\n  updatedProps: any;\n};\ntype ActionsType =\n  | RemoveTodolistActionType\n  | AddTodolistActionType\n  | ChangeTodolistActionType;\n\nexport const todolistId1 = v1();\nexport const todolistId2 = v1();\n\nconst initialState: Array<TodolistsType> = [\n  {\n    todo_id: todolistId1,\n    title: \"Whats to lear\",\n    filter: \"all\",\n    isDone: false,\n    tasks: [],\n  },\n  {\n    todo_id: todolistId2,\n    title: \"What to do\",\n    filter: \"all\",\n    isDone: false,\n    tasks: [],\n  },\n];\nexport const todolistsReducer = (\n  state: Array<TodolistsType> = initialState,\n  action: ActionsType\n): Array<TodolistsType> => {\n  switch (action.type) {\n    case \"REMOVE-TODOLIST\": {\n      return state.filter((tl) => tl.todo_id !== action.todo_id);\n    }\n    case \"ADD-TODOLIST\": {\n      return [\n        {\n          todo_id: action.todo_id,\n          title: action.title,\n          filter: \"all\",\n          isDone: false,\n          tasks: [],\n        },\n        ...state,\n      ];\n    }\n    case \"CHANGE-TODOLIST\": {\n      const todolist = state.find((tl) => tl.todo_id === action.todo_id);\n      if (todolist) {\n        todolist.title = action.updatedProps;\n      }\n      return [...state];\n    }\n  }\n  return state;\n};\nexport const removeTodolistAC = (\n  todolistId: string\n): RemoveTodolistActionType => {\n  return { type: \"REMOVE-TODOLIST\", todo_id: todolistId };\n};\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\n  return { type: \"ADD-TODOLIST\", title: title, todo_id: v1() };\n};\nexport const changeTodolistAC = (\n  todo_id: string,\n  updatedProps: any\n): ChangeTodolistActionType => {\n  return {\n    type: \"CHANGE-TODOLIST\",\n    todo_id: todo_id,\n    updatedProps: updatedProps,\n  };\n};\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { todolistsReducer } from \"./todolists-reducer\";\nimport { authReducer } from \"./auth-reducer\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  userInfo: authReducer,\n  todolists: todolistsReducer,\n});\n\nexport type DashboardRootState = ReturnType<typeof rootReducer>;\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\n// @ts-ignore\nwindow.store = store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeFilter\":\"todolist_activeFilter__AJWTP\",\"isDone\":\"todolist_isDone__6xNYw\"};"],"sourceRoot":""}